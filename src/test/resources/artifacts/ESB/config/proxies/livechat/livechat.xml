<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse" name="livechat" transports="https,http" statistics="disable" trace="disable"
   startOnLoad="true">
   <target>
      <inSequence>
         <property name="apiUrl" expression="json-eval($.apiUrl)" />
         <property name="login" expression="json-eval($.login)" />
         <property name="apiKey" expression="json-eval($.apiKey)" />
         <property name="agentLogin" expression="json-eval($.agentLogin)" />
         <property name="name" expression="json-eval($.name)" />
         <property name="jobTitle" expression="json-eval($.jobTitle)" />
         <property name="loginStatus" expression="json-eval($.loginStatus)" />
         <property name="status" expression="json-eval($.status)" />
         <property name="agents" expression="json-eval($.agents)" />
         <property name="language" expression="json-eval($.language)" />
         <property name="groupId" expression="json-eval($.groupId)" />
         <property name="to" expression="json-eval($.to)" />
         <property name="chatId" expression="json-eval($.chatId)" />
         <property name="dateFrom" expression="json-eval($.dateFrom)" />
         <property name="dateTo" expression="json-eval($.dateTo)"/>
         <property name="message" expression="json-eval($.message)" />
         <property name="subject" expression="json-eval($.subject)" />
         <property name="assigneeId" expression="json-eval($.assigneeId)" />
         <property name="requesterEmail" expression="json-eval($.requesterEmail)" />
         <property name="requesterName" expression="json-eval($.requesterName)" />
         <property name="ticketId" expression="json-eval($.ticketId)" />
         <property name="assignee" expression="json-eval($.assignee)" />
         <property name="order" expression="json-eval($.order)" />
         <property name="rate" expression="json-eval($.rate)"/>
         <livechat.init>
            <apiUrl>{$ctx:apiUrl}</apiUrl>
            <login>{$ctx:login}</login>
            <apiKey>{$ctx:apiKey}</apiKey>
         </livechat.init>
         <switch source="get-property('transport', 'Action')">
            <case regex="urn:createAgent">
               <livechat.createAgent>
                  <agentLogin>{$ctx:agentLogin}</agentLogin>
                  <name>{$ctx:name}</name>
                  <jobTitle>{$ctx:jobTitle}</jobTitle>
                  <loginStatus>{$ctx:loginStatus}</loginStatus>
               </livechat.createAgent>
            </case>
            <case regex="urn:listAgents">
               <livechat.listAgents>
                  <status>{$ctx:status}</status>
               </livechat.listAgents>
            </case>
            <case regex="urn:getAgentByLoginId">
               <livechat.getAgentByLoginId>
                  <agentLogin>{$ctx:agentLogin}</agentLogin>
               </livechat.getAgentByLoginId>
            </case>
            <case regex="urn:createGroup">
               <livechat.createGroup>
                  <agents>{$ctx:agents}</agents>
                  <name>{$ctx:name}</name>
                  <language>{$ctx:language}</language>
               </livechat.createGroup>
            </case>
            <case regex="urn:listGroups">
               <livechat.listGroups>
               </livechat.listGroups>
            </case>
            <case regex="urn:getGroupById">
               <livechat.getGroupById>
                  <groupId>{$ctx:groupId}</groupId>
               </livechat.getGroupById>
            </case>
            <case regex="urn:sendChatTranscriptByEmail">
               <livechat.sendChatTranscriptByEmail>
                  <to>{$ctx:to}</to>
                  <chatId>{$ctx:chatId}</chatId>
               </livechat.sendChatTranscriptByEmail>
            </case>
            <case regex="urn:listChats">
               <livechat.listChats>
                  <rate>{$ctx:rate}</rate>
                  <dateFrom>{$ctx:dateFrom}</dateFrom>
                  <dateTo>{$ctx:dateTo}</dateTo>
               </livechat.listChats>
            </case>
            <case regex="urn:getChatById">
               <livechat.getChatById>
                  <chatId>{$ctx:chatId}</chatId>
               </livechat.getChatById>
            </case>
            <case regex="urn:createTicket">
               <livechat.createTicket>
                  <message>{$ctx:message}</message>
                  <subject>{$ctx:subject}</subject>
                  <assigneeId>{$ctx:assigneeId}</assigneeId>
                  <requesterEmail>{$ctx:requesterEmail}</requesterEmail>
                  <requesterName>{$ctx:requesterName}</requesterName>
               </livechat.createTicket>
            </case>
            <case regex="urn:getTicketById">
               <livechat.getTicketById>
                  <ticketId>{$ctx:ticketId}</ticketId>
               </livechat.getTicketById>
            </case>
            <case regex="urn:listTickets">
               <livechat.listTickets>
                  <assignee>{$ctx:assignee}</assignee>
                  <order>{$ctx:order}</order>
               </livechat.listTickets>
            </case>
         </switch>
         <respond></respond>
      </inSequence>
      <outSequence>
         <log></log>
         <send></send>
      </outSequence>
   </target>
</proxy>